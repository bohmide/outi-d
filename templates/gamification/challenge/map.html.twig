{% extends 'base_kids.html.twig' %}

{% block title %} Globetrotter Junior {% endblock %}

{% block body %}
    <div class="container py-5">
        <div class="text-center">
            <h2 class="display-3 text-primary mb-4">Explore the World our Globetrotter Junior</h2>
            <p class="text-muted">Click on a country to start the challenge!</p>
        </div>

        <div id="map-container" class="border border-primary rounded shadow-lg p-2">
            <div id="map" class="rounded" style="width: 100%; height: 500px;"></div>
        </div>
    </div>
    
    

    <audio id="mapS" src="{{ asset('audio/game.mp3') }}"></audio>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Play sound when the quiz card is visible
            var quizSound = document.getElementById('mapS');
           

            
                quizSound.play(); // Play sound when quiz appears
            
        });

        
    </script>

    <script>
        
        document.addEventListener("DOMContentLoaded", async function() {
            var map = L.map('map').setView([20, 0], 2); // Initial map view
    
            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: '&copy; OpenStreetMap contributors'
            }).addTo(map);
    
            // Fetch country ISO codes dynamically
            let countryCodes = await getCountryCodes();
    
            // Load country borders from GeoJSON
            fetch('https://raw.githubusercontent.com/johan/world.geo.json/master/countries.geo.json')
                .then(response => response.json())
                .then(data => {
                    L.geoJson(data, {
                        style: {
                            color: "#007bff", 
                            weight: 2,
                            fillOpacity: 0.3
                        },
                        onEachFeature: function(feature, layer) {
                            let countryName = feature.properties.name;
                            let countryCode = countryCodes[countryName];
    
                            if (countryCode) {
                                // Create flag icon
                                let flagUrl = `https://flagcdn.com/w40/${countryCode.toLowerCase()}.png`;
    
                                var flagIcon = L.icon({
                                    iconUrl: flagUrl,
                                    iconSize: [30, 20],
                                    iconAnchor: [15, 10]
                                });
    
                                var marker = L.marker(layer.getBounds().getCenter(), { icon: flagIcon }).addTo(map);
    
                                // Clicking on country or flag redirects to quiz
                                marker.on('click', function() {
                                    startQuiz(countryName);
                                });
    
                                layer.on('click', function() {
                                    startQuiz(countryName);
                                });
    
                                // Tooltip with country name
                                marker.bindTooltip(countryName, { permanent: false, direction: "top" });
                            }
                        }
                    }).addTo(map);
                })
                .catch(error => console.error("GeoJSON Load Error:", error));
        });
    
        async function getCountryCodes() {
            let codes = {};
            try {
                let response = await fetch("https://restcountries.com/v3.1/all");
                let countries = await response.json();
                countries.forEach(country => {
                    if (country.name.common && country.cca2) {
                        codes[country.name.common] = country.cca2;
                    }
                });
            } catch (error) {
                console.error("Error fetching country codes:", error);
            }
            return codes;
        }
    
        function startQuiz(country) {
            window.location.href = '/quiz/country/' + encodeURIComponent(country);
        }
    </script>
    

    <style>
        #map-container {
            background-color: #f9f9f9;
            border-radius: 15px;
            overflow: hidden;
        }
        
        #map {
            border-radius: 10px;
        }
    </style>
{% endblock %}
